{"version":3,"file":"avalanche-js-contract.cjs.development.js","sources":["../src/abi/abiCoder.ts","../src/abi/utils.ts","../src/abi/api.ts","../src/abi/index.ts","../src/models/AbiItemModel.ts","../src/models/AbiModel.ts","../src/utils/mapper.ts","../src/utils/encoder.ts","../src/utils/status.ts","../src/methods/method.ts","../src/methods/methodFactory.ts","../src/utils/decoder.ts","../src/utils/formatter.ts","../src/events/event.ts","../src/events/eventFactory.ts","../src/contract.ts","../src/contractFactory.ts"],"sourcesContent":["/**\n # avalanche-js-contract\n\nThis package provides a collection of apis to create, deploy, and interact with smart contracts. In Avalanche, smart contracts all fully EVM compatible and the formats and terminologies match 1-to-1 with EVM smart contracts.\n\n## Installation\n\n```\nnpm install avalanche-js-contract\n```\n\n## Usage\n\nDeploying a contract using `contractConstructor`\n```javascript\nconst { ContractFactory } = require('avalanche-js-contract');\nconst { Wallet } = require('avalanche-js-account');\nconst { Messenger, HttpProvider } = require('avalanche-js-network');\nconst { ChainID, ChainType, hexToNumber } = require('avalanche-js-utils');\n\n* const wallet = new Wallet(\n*   new Messenger(\n*     new HttpProvider('https://api.s0.b.hmny.io'),\n*     ChainType.Avalanche,\n*     ChainID.HmyTestnet,\n*   ),\n* );\n* const factory = new ContractFactory(wallet);\n\n* const contractJson = require(\"./Counter.json\");\n* const contract = factory.createContract(contractJson.abi);\n\n* const options1 = { gasPrice: '0x3B9ACA00' }; // gas price in hex corresponds to 1 Gwei or 1000000000\n* let options2 = { gasPrice: 1000000000, gasLimit: 21000 }; // setting the default gas limit, but changing later based on estimate gas\n\n* const options3 = { data: contractJson.bytecode }; // contractConstructor needs contract bytecode to deploy\n\n* contract.wallet.addByPrivateKey('1f054c21a0f57ebc402c00e14bd1707ddf45542d4ed9989933dbefc4ea96ca68');\n\n* contract.methods.contractConstructor(options3).estimateGas(options1).then(gas => {\n*   options2 = {...options2, gasLimit: hexToNumber(gas)};\n*   contract.methods.contractConstructor(options3).send(options2).then(response => {\n*     console.log('contract deployed at ' + response.transaction.receipt.contractAddress);\n*   });\n* });\n```\nInstead of `contract.methods.contractConstructor`, `contract.deploy` could be used and it will work.\n\nLoading a contract object using the contract json and contract address for interacting with it\n```javascript\n* const { Avalanche } = require(\"avalanche-js-core\");\n* const { ChainID, ChainType } = require(\"avalanche-js-utils\");\n* const hmy = new Avalanche(\"https://api.s0.b.hmny.io\", {\n*   chainType: ChainType.Avalanche,\n*   chainId: ChainID.HmyTestnet,\n* });\n\nconst contractJson = require(\"./Counter.json\");\nconst contractAddr = \"0x19f64050e6b2d376e52AC426E366c49EEb0724B1\";\n\nconst contract = hmy.contracts.createContract(contractJson.abi, contractAddr);\nconsole.log(contract.methods);\n```\n\nDirectly loading contract using `ContractFactory`\n```javascript\nconst { ContractFactory } = require('avalanche-js-contract');\nconst { Wallet } = require('avalanche-js-account');\nconst { Messenger, HttpProvider } = require('avalanche-js-network');\nconst { ChainID, ChainType, hexToNumber } = require('avalanche-js-utils');\n\n* const wallet = new Wallet(new Messenger(\n*   new HttpProvider('https://api.s0.b.hmny.io'),\n*   ChainType.Avalanche,\n*   ChainID.HmyTestnet,\n* ));\nconst factory = new ContractFactory(wallet);\nconst contract = factory.createContract(contractJson.abi, contractAddr);\n```\n\nEstimate gas for contract methods\n```javascript\n* const options1 = { gasPrice: '0x3B9ACA00' }; // gas price in hex corresponds to 1 Gwei or 1000000000\n\n* contract.methods.getCount().estimateGas(options1).then(gas => {\n*   console.log('gas required for getCount is ' + hexToNumber(gas));\n* });\n```\n\nCall contract read-only methods. Avalanche uses 1 Gwei gas price and gas limit of 21000 by default. Use the estimate gas api to correctly set the gas limit.\n```javascript\n* const options1 = { gasPrice: '0x3B9ACA00' }; // gas price in hex corresponds to 1 Gwei or 1000000000\n* let options2 = { gasPrice: 1000000000, gasLimit: 21000 }; // setting the default gas limit, but changing later based on estimate gas\n\n* contract.methods.getCount().estimateGas(options1).then(gas => {\n*   options2 = {...options2, gasLimit: hexToNumber(gas)};\n*   contract.methods.getCount().call(options2).then(count => {\n*     console.log('counter value: ' + count);\n*   });\n* });\n```\n\nInvoking contract modification methods using `send` api. Need to add a signing account to the contract wallet, otherwise `send` api will not work.\n```javascript\n* const options1 = { gasPrice: '0x3B9ACA00' }; // gas price in hex corresponds to 1 Gwei or 1000000000\n* let options2 = { gasPrice: 1000000000, gasLimit: 21000 }; // setting the default gas limit, but changing later based on estimate gas\n\n* contract.wallet.addByPrivateKey('1f054c21a0f57ebc402c00e14bd1707ddf45542d4ed9989933dbefc4ea96ca68');\n\n* contract.methods.incrementCounter().estimateGas(options1).then(gas => {\n*   options2 = {...options2, gasLimit: hexToNumber(gas)};\n*   contract.methods.incrementCounter().send(options2).then(response => {\n*     console.log(response.transaction.receipt);\n*   });\n* });\n```\n\nAll the above apis can also be asynchronously executed using `async` and `await`.\n\nSubscribing to the contract events requires web socket based messenger.\n```javascript\n* const { ContractFactory } = require('avalanche-js-contract');\n* const { Wallet } = require('avalanche-js-account');\n* const { Messenger, WSProvider } = require('avalanche-js-network');\n* const { ChainID, ChainType, hexToNumber } = require('avalanche-js-utils');\n* const ws = new WSProvider('wss://ws.s0.b.hmny.io');\n\n* const wallet = new Wallet(\n*   new Messenger(\n*     ws,\n*     ChainType.Avalanche,\n*     ChainID.HmyTestnet,\n*   ),\n* );\n* const factory = new ContractFactory(wallet);\n\n* const contractJson = require(\"./Counter.json\");\n* const contractAddr = '0x8ada52172abda19b9838eb00498a40952be6a019';\n\n* const contract = factory.createContract(contractJson.abi, contractAddr);\n\n* contract.events\n*   .IncrementedBy()\n*   .on('data', (event) => {\n*     console.log(event);\n*   })\n*   .on('error', console.error);\n```\n *\n * @packageDocumentation\n * @module avalanche-contract\n */\n\n// this file is mainly ported from `ethers.js`, but done some fixes\n// 1. added bytesPadRight support\n// 2. ts-lint\n// 3. use BN as default Bignumber instance\n\nimport {\n  BN,\n  info,\n  throwError,\n  INVALID_ARGUMENT,\n  arrayify,\n  hexlify,\n  padZeros,\n  concat,\n  toChecksumAddress,\n  checkArgumentCount,\n  checkNormalize,\n  Arrayish,\n  checkNew,\n  bytesPadRight,\n} from 'avalanche-js-crypto';\nimport { hexToBN, defineReadOnly } from 'avalanche-js-utils';\n\n/** @hidden */\nconst NegativeAVAX: BN = new BN(-1);\n/** @hidden */\nconst AVAX: BN = new BN(1);\n/** @hidden */\nconst Zero: BN = new BN(0);\n/** @hidden */\nconst HashZero = '0x0000000000000000000000000000000000000000000000000000000000000000';\n/** @hidden */\nconst MaxUint256: BN = hexToBN(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n);\n\n/** @hidden */\nexport type CoerceFunc = (type: string, value: any) => any;\n\n/** @hidden */\nexport interface ParamType {\n  name?: string;\n  type: string;\n  indexed?: boolean;\n  components?: any[];\n}\n\n// @TODO: should this just be a combined Fragment?\n\n/** @hidden */\nexport interface EventFragment {\n  type: string;\n  name: string;\n\n  anonymous: boolean;\n\n  inputs: ParamType[];\n}\n\n/** @hidden */\nexport interface FunctionFragment {\n  type: string;\n  name: string;\n\n  constant: boolean;\n\n  inputs: ParamType[];\n  outputs: ParamType[];\n\n  payable: boolean;\n  stateMutability: string | null;\n\n  gas: BN | null;\n}\n\n///////////////////////////////\n/** @hidden */\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\n/** @hidden */\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n/** @hidden */\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\n/** @hidden */\nexport const defaultCoerceFunc: CoerceFunc = (type: string, value: any): any => {\n  const match = type.match(paramTypeNumber);\n  if (match && parseInt(match[2], 10) <= 48) {\n    // return value.toNumber();\n    return value.toString('hex');\n  }\n  return value;\n};\n\n///////////////////////////////////\n// Parsing for Solidity Signatures\n\n///////////////////////////////////\n// Parsing for Solidity Signatures\n\n/** @hidden */\nconst regexParen = new RegExp('^([^)(]*)\\\\((.*)\\\\)([^)(]*)$');\n/** @hidden */\nconst regexIdentifier = new RegExp('^[A-Za-z_][A-Za-z0-9_]*$');\n\n/** @hidden */\nfunction verifyType(type: string): string {\n  // These need to be transformed to their full description\n  if (type.match(/^uint($|[^1-9])/)) {\n    type = 'uint256' + type.substring(4);\n  } else if (type.match(/^int($|[^1-9])/)) {\n    type = 'int256' + type.substring(3);\n  }\n\n  return type;\n}\n\n/** @hidden */\ninterface ParseState {\n  allowArray?: boolean;\n  allowName?: boolean;\n  allowParams?: boolean;\n  allowType?: boolean;\n  readArray?: boolean;\n}\n\n/** @hidden */\ninterface ParseNode {\n  parent?: any;\n  type?: string;\n  name?: string;\n  state?: ParseState;\n  indexed?: boolean;\n  components?: any[];\n}\n\n/** @hidden */\nfunction parseParam(param: string, allowIndexed?: boolean): ParamType {\n  const originalParam = param;\n  // tslint:disable-next-line: no-shadowed-variable\n  function throwError(i: number) {\n    throw new Error(\n      'unexpected character \"' +\n        originalParam[i] +\n        '\" at position ' +\n        i +\n        ' in \"' +\n        originalParam +\n        '\"',\n    );\n  }\n  param = param.replace(/\\s/g, ' ');\n\n  const parent: ParseNode = { type: '', name: '', state: { allowType: true } };\n  let node = parent;\n\n  for (let i = 0; i < param.length; i++) {\n    const c = param[i];\n    switch (c) {\n      case '(':\n        if (!node.state || !node.state.allowParams) {\n          throwError(i);\n        }\n        if (node.state) {\n          node.state.allowType = false;\n        }\n        if (node.type) {\n          node.type = verifyType(node.type);\n        }\n\n        node.components = [{ type: '', name: '', parent: node, state: { allowType: true } }];\n        node = node.components[0];\n        break;\n\n      case ')':\n        delete node.state;\n        if (allowIndexed && node.name === 'indexed') {\n          node.indexed = true;\n          node.name = '';\n        }\n        if (node.type) {\n          node.type = verifyType(node.type);\n        }\n\n        const child = node;\n        node = node.parent;\n        if (!node) {\n          throwError(i);\n        }\n        delete child.parent;\n        if (node.state) {\n          node.state.allowParams = false;\n          node.state.allowName = true;\n          node.state.allowArray = true;\n        }\n\n        break;\n\n      case ',':\n        delete node.state;\n        if (allowIndexed && node.name === 'indexed') {\n          node.indexed = true;\n          node.name = '';\n        }\n        if (node.type) {\n          node.type = verifyType(node.type);\n        }\n\n        const sibling: ParseNode = {\n          type: '',\n          name: '',\n          parent: node.parent,\n          state: { allowType: true },\n        };\n        node.parent.components.push(sibling);\n        delete node.parent;\n        node = sibling;\n        break;\n\n      // Hit a space...\n      case ' ':\n        // If reading type, the type is done and may read a param or name\n        if (node.state) {\n          if (node.state.allowType) {\n            if (node.type !== '' && node.type) {\n              node.type = verifyType(node.type);\n              delete node.state.allowType;\n              node.state.allowName = true;\n              node.state.allowParams = true;\n            }\n          }\n\n          // If reading name, the name is done\n          if (node.state.allowName) {\n            if (node.name !== '') {\n              if (allowIndexed && node.name === 'indexed') {\n                node.indexed = true;\n                node.name = '';\n              } else {\n                node.state.allowName = false;\n              }\n            }\n          }\n        }\n\n        break;\n\n      case '[':\n        if (!node.state || !node.state.allowArray) {\n          throwError(i);\n        }\n        if (node.state) {\n          node.type += c;\n          node.state.allowArray = false;\n          node.state.allowName = false;\n          node.state.readArray = true;\n        }\n\n        break;\n\n      case ']':\n        if (!node.state || !node.state.readArray) {\n          throwError(i);\n        }\n        if (node.state) {\n          node.type += c;\n\n          node.state.readArray = false;\n          node.state.allowArray = true;\n          node.state.allowName = true;\n        }\n\n        break;\n\n      default:\n        if (node.state) {\n          if (node.state.allowType) {\n            node.type += c;\n            node.state.allowParams = true;\n            node.state.allowArray = true;\n          } else if (node.state.allowName) {\n            node.name += c;\n            delete node.state.allowArray;\n          } else if (node.state.readArray) {\n            node.type += c;\n          } else {\n            throwError(i);\n          }\n        }\n    }\n  }\n\n  if (node.parent) {\n    throw new Error('unexpected eof');\n  }\n\n  delete parent.state;\n\n  if (allowIndexed && node.name === 'indexed') {\n    node.indexed = true;\n    node.name = '';\n  }\n\n  if (parent.type) {\n    parent.type = verifyType(parent.type);\n  }\n\n  return <ParamType>parent;\n}\n\n// @TODO: Better return type\n/** @hidden */\nfunction parseSignatureEvent(fragment: string): EventFragment {\n  const abi: EventFragment = {\n    anonymous: false,\n    inputs: [],\n    name: '',\n    type: 'event',\n  };\n\n  const match = fragment.match(regexParen);\n  if (!match) {\n    throw new Error('invalid event: ' + fragment);\n  }\n\n  abi.name = match[1].trim();\n\n  splitNesting(match[2]).forEach((param) => {\n    param = parseParam(param, true);\n    param.indexed = !!param.indexed;\n    abi.inputs.push(param);\n  });\n\n  match[3].split(' ').forEach((modifier) => {\n    switch (modifier) {\n      case 'anonymous':\n        abi.anonymous = true;\n        break;\n      case '':\n        break;\n      default:\n        info('unknown modifier: ' + modifier);\n    }\n  });\n\n  if (abi.name && !abi.name.match(regexIdentifier)) {\n    throw new Error('invalid identifier: \"' + abi.name + '\"');\n  }\n\n  return abi;\n}\n\n/** @hidden */\nexport function parseParamType(type: string): ParamType {\n  return parseParam(type, true);\n}\n\n// @TODO: Allow a second boolean to expose names\n/** @hidden */\nexport function formatParamType(paramType: ParamType): string {\n  return getParamCoder(defaultCoerceFunc, paramType).type;\n}\n\n/** @hidden */\nfunction parseSignatureFunction(fragment: string): FunctionFragment {\n  const abi: FunctionFragment = {\n    constant: false,\n    gas: null,\n    inputs: [],\n    name: '',\n    outputs: [],\n    payable: false,\n    stateMutability: null, // @TODO: Should this be initialized to 'nonpayable'?\n    type: 'function',\n  };\n\n  let comps = fragment.split('@');\n  if (comps.length !== 1) {\n    if (comps.length > 2) {\n      throw new Error('invalid signature');\n    }\n    if (!comps[1].match(/^[0-9]+$/)) {\n      throw new Error('invalid signature gas');\n    }\n    abi.gas = new BN(comps[1]);\n    fragment = comps[0];\n  }\n\n  comps = fragment.split(' returns ');\n  const left = comps[0].match(regexParen);\n  if (!left) {\n    throw new Error('invalid signature');\n  }\n\n  abi.name = left[1].trim();\n  if (!abi.name.match(regexIdentifier)) {\n    throw new Error('invalid identifier: \"' + left[1] + '\"');\n  }\n\n  splitNesting(left[2]).forEach((param) => {\n    abi.inputs.push(parseParam(param));\n  });\n\n  left[3].split(' ').forEach((modifier) => {\n    switch (modifier) {\n      case 'constant':\n        abi.constant = true;\n        break;\n      case 'payable':\n        abi.payable = true;\n        abi.stateMutability = 'payable';\n        break;\n      case 'pure':\n        abi.constant = true;\n        abi.stateMutability = 'pure';\n        break;\n      case 'view':\n        abi.constant = true;\n        abi.stateMutability = 'view';\n        break;\n      case 'external':\n      case 'public':\n      case '':\n        break;\n      default:\n        info('unknown modifier: ' + modifier);\n    }\n  });\n\n  // We have outputs\n  if (comps.length > 1) {\n    const right = comps[1].match(regexParen);\n    if (right === null || right[1].trim() !== '' || right[3].trim() !== '') {\n      throw new Error('unexpected tokens');\n    }\n\n    splitNesting(right[2]).forEach((param) => {\n      abi.outputs.push(parseParam(param));\n    });\n  }\n\n  if (abi.name === 'constructor') {\n    abi.type = 'constructor';\n\n    if (abi.outputs.length) {\n      throw new Error('constructor may not have outputs');\n    }\n\n    delete abi.name;\n    delete abi.outputs;\n  }\n\n  return abi;\n}\n\n// @TODO: Allow a second boolean to expose names and modifiers\n/** @hidden */\nexport function formatSignature(fragment: EventFragment | FunctionFragment): string {\n  return fragment.name + '(' + fragment.inputs.map((i) => formatParamType(i)).join(',') + ')';\n}\n\n/** @hidden */\nexport function parseSignature(fragment: string): EventFragment | FunctionFragment {\n  if (typeof fragment === 'string') {\n    // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n    fragment = fragment.replace(/\\s/g, ' ');\n    fragment = fragment\n      .replace(/\\(/g, ' (')\n      .replace(/\\)/g, ') ')\n      .replace(/\\s+/g, ' ');\n    fragment = fragment.trim();\n\n    if (fragment.substring(0, 6) === 'event ') {\n      return parseSignatureEvent(fragment.substring(6).trim());\n    } else {\n      if (fragment.substring(0, 9) === 'function ') {\n        fragment = fragment.substring(9);\n      }\n      return parseSignatureFunction(fragment.trim());\n    }\n  }\n\n  throw new Error('unknown signature');\n}\n\n///////////////////////////////////\n// Coders\n/** @hidden */\ninterface DecodedResult {\n  consumed: number;\n  value: any;\n}\n\n/** @hidden */\nabstract class Coder {\n  readonly coerceFunc: CoerceFunc;\n  readonly name: string;\n  readonly type: string;\n  readonly localName?: string;\n  readonly dynamic: boolean;\n  constructor(\n    coerceFunc: CoerceFunc,\n    name: string,\n    type: string,\n    localName: string | undefined,\n    dynamic: boolean,\n  ) {\n    this.coerceFunc = coerceFunc;\n    this.name = name;\n    this.type = type;\n    this.localName = localName;\n    this.dynamic = dynamic;\n  }\n\n  abstract encode(value: any): Uint8Array;\n  abstract decode(data: Uint8Array, offset: number): DecodedResult;\n}\n\n// Clones the functionality of an existing Coder, but without a localName\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderAnonymous extends Coder {\n  private coder: Coder;\n  constructor(coder: Coder) {\n    super(coder.coerceFunc, coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n  encode(value: any): Uint8Array {\n    return this.coder.encode(value);\n  }\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    return this.coder.decode(data, offset);\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderNull extends Coder {\n  constructor(coerceFunc: CoerceFunc, localName: string) {\n    super(coerceFunc, 'null', '', localName, false);\n  }\n\n  encode(value: any): Uint8Array {\n    const result = arrayify([]) || new Uint8Array();\n    return result;\n  }\n\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    if (offset > data.length) {\n      throw new Error('invalid null');\n    }\n    return {\n      consumed: 0,\n      value: this.coerceFunc('null', undefined),\n    };\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderNumber extends Coder {\n  readonly size: number;\n  readonly signed: boolean;\n  constructor(coerceFunc: CoerceFunc, size: number, signed: boolean, localName: string) {\n    const name = (signed ? 'int' : 'uint') + size * 8;\n    super(coerceFunc, name, name, localName, false);\n\n    this.size = size;\n    this.signed = signed;\n  }\n\n  encode(value: BN | number | string): Uint8Array {\n    let result;\n    try {\n      let v: BN;\n      if (typeof value == 'string' && value.startsWith('0x')) {\n        v = new BN(value.slice(2), 'hex');\n      } else {\n        v = new BN(value);\n      }\n      if (this.signed) {\n        let bounds = MaxUint256.maskn(this.size * 8 - 1);\n        if (v.gt(bounds)) {\n          throw new Error('out-of-bounds');\n        }\n        bounds = bounds.add(AVAX).mul(NegativeAVAX);\n        if (v.lt(bounds)) {\n          throw new Error('out-of-bounds');\n        }\n      } else if (v.lt(Zero) || v.gt(MaxUint256.maskn(this.size * 8))) {\n        throw new Error('out-of-bounds');\n      }\n\n      v = v.toTwos(this.size * 8).maskn(this.size * 8);\n      if (this.signed) {\n        v = v.fromTwos(this.size * 8).toTwos(256);\n      }\n      const vString = v.toString('hex');\n\n      result = padZeros(arrayify(`0x${vString}`) || new Uint8Array(), 32);\n    } catch (error) {\n      throwError('invalid number value', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: this.name,\n        value,\n      });\n    }\n    return result || padZeros(new Uint8Array(), 32);\n  }\n\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    if (data.length < offset + 32) {\n      throwError('insufficient data for ' + this.name + ' type', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: this.name,\n        value: hexlify(data.slice(offset, offset + 32)),\n      });\n    }\n    const junkLength = 32 - this.size;\n    const dataValue = hexlify(data.slice(offset + junkLength, offset + 32));\n\n    let value = hexToBN(dataValue);\n    // tslint:disable-next-line: prefer-conditional-expression\n    if (this.signed) {\n      value = value.fromTwos(this.size * 8);\n    } else {\n      value = value.maskn(this.size * 8);\n    }\n\n    return {\n      consumed: 32,\n      value: this.coerceFunc(this.name, value),\n    };\n  }\n}\n\n/** @hidden */\nconst uint256Coder = new CoderNumber(\n  (type: string, value: any) => {\n    return value;\n  },\n  32,\n  false,\n  'none',\n);\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderBoolean extends Coder {\n  constructor(coerceFunc: CoerceFunc, localName: string) {\n    super(coerceFunc, 'bool', 'bool', localName, false);\n  }\n\n  encode(value: boolean): Uint8Array {\n    return uint256Coder.encode(!!value ? new BN(1) : new BN(0));\n  }\n\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    let result;\n    try {\n      result = uint256Coder.decode(data, offset);\n    } catch (error) {\n      if (error.reason === 'insufficient data for uint256 type') {\n        throwError('insufficient data for boolean type', INVALID_ARGUMENT, {\n          arg: this.localName,\n          coderType: 'boolean',\n          value: error.value,\n        });\n      }\n      throw error;\n    }\n    return {\n      consumed: result.consumed,\n      value: this.coerceFunc('bool', !result.value.isZero()),\n    };\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderFixedBytes extends Coder {\n  readonly length: number;\n  constructor(coerceFunc: CoerceFunc, length: number, localName: string) {\n    const name = 'bytes' + length;\n    super(coerceFunc, name, name, localName, false);\n    this.length = length;\n  }\n\n  encode(value: Arrayish): Uint8Array {\n    const result = new Uint8Array(this.length);\n\n    try {\n      const arrayied = arrayify(value);\n      let data = null;\n      if (arrayied !== null) {\n        const valueToByte = hexlify(arrayied);\n        data = arrayify(bytesPadRight(valueToByte, this.length));\n      } else {\n        throw new Error('cannot arraify data');\n      }\n\n      if (data === null || data.length !== this.length) {\n        throw new Error('incorrect data length');\n      }\n      result.set(data);\n    } catch (error) {\n      throwError('invalid ' + this.name + ' value', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: this.name,\n        value: error.value || value,\n      });\n    }\n    return result;\n  }\n\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    if (data.length < offset + 32) {\n      throwError('insufficient data for ' + name + ' type', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: this.name,\n        value: hexlify(data.slice(offset, offset + 32)),\n      });\n    }\n\n    return {\n      consumed: 32,\n      value: this.coerceFunc(this.name, hexlify(data.slice(offset, offset + this.length))),\n    };\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderAddress extends Coder {\n  constructor(coerceFunc: CoerceFunc, localName: string) {\n    super(coerceFunc, 'address', 'address', localName, false);\n  }\n  encode(value: string): Uint8Array {\n    const result = new Uint8Array(32);\n    try {\n      const addr = arrayify(toChecksumAddress(value)) || new Uint8Array();\n      result.set(addr, 12);\n    } catch (error) {\n      throwError('invalid address', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: 'address',\n        value,\n      });\n    }\n    return result;\n  }\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    if (data.length < offset + 32) {\n      throwError('insufficuent data for address type', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: 'address',\n        value: hexlify(data.slice(offset, offset + 32)),\n      });\n    }\n    return {\n      consumed: 32,\n      value: this.coerceFunc(\n        'address',\n        toChecksumAddress(hexlify(data.slice(offset + 12, offset + 32))),\n      ),\n    };\n  }\n}\n\n/** @hidden */\nfunction _encodeDynamicBytes(value: Uint8Array): Uint8Array {\n  const dataLength = 32 * Math.ceil(value.length / 32);\n  const padding = new Uint8Array(dataLength - value.length);\n\n  return concat([uint256Coder.encode(new BN(value.length)), value, padding]);\n}\n\n/** @hidden */\nfunction _decodeDynamicBytes(data: Uint8Array, offset: number, localName: string): DecodedResult {\n  if (data.length < offset + 32) {\n    throwError('insufficient data for dynamicBytes length', INVALID_ARGUMENT, {\n      arg: localName,\n      coderType: 'dynamicBytes',\n      value: hexlify(data.slice(offset, offset + 32)),\n    });\n  }\n\n  let length = uint256Coder.decode(data, offset).value;\n\n  try {\n    length = length.toNumber();\n  } catch (error) {\n    throwError('dynamic bytes count too large', INVALID_ARGUMENT, {\n      arg: localName,\n      coderType: 'dynamicBytes',\n      value: length.toString(),\n    });\n  }\n\n  if (data.length < offset + 32 + length) {\n    throwError('insufficient data for dynamicBytes type', INVALID_ARGUMENT, {\n      arg: localName,\n      coderType: 'dynamicBytes',\n      value: hexlify(data.slice(offset, offset + 32 + length)),\n    });\n  }\n\n  return {\n    consumed: 32 + 32 * Math.ceil(length / 32),\n    value: data.slice(offset + 32, offset + 32 + length),\n  };\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderDynamicBytes extends Coder {\n  constructor(coerceFunc: CoerceFunc, localName: string) {\n    super(coerceFunc, 'bytes', 'bytes', localName, true);\n  }\n  encode(value: Arrayish): Uint8Array {\n    let result = new Uint8Array();\n    try {\n      result = _encodeDynamicBytes(arrayify(value) || new Uint8Array());\n    } catch (error) {\n      throwError('invalid bytes value', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: 'bytes',\n        value: error.value,\n      });\n    }\n    return result;\n  }\n\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    const result = _decodeDynamicBytes(data, offset, this.localName || '');\n    result.value = this.coerceFunc('bytes', hexlify(result.value));\n    return result;\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderString extends Coder {\n  constructor(coerceFunc: CoerceFunc, localName: string) {\n    super(coerceFunc, 'string', 'string', localName, true);\n  }\n\n  encode(value: string): Uint8Array {\n    if (typeof value !== 'string') {\n      throwError('invalid string value', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: 'string',\n        value,\n      });\n    }\n    return _encodeDynamicBytes(toUtf8Bytes(value));\n  }\n\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    const result = _decodeDynamicBytes(data, offset, this.localName || '');\n    result.value = this.coerceFunc('string', toUtf8String(result.value));\n    return result;\n  }\n}\n\n/** @hidden */\nfunction alignSize(size: number): number {\n  return 32 * Math.ceil(size / 32);\n}\n\n/** @hidden */\nfunction pack(coders: Coder[], values: any[]): Uint8Array {\n  if (Array.isArray(values)) {\n    // do nothing\n  } else if (values && typeof values === 'object') {\n    const arrayValues: any[] = [];\n    coders.forEach((coder) => {\n      arrayValues.push((<any>values)[coder.localName || '']);\n    });\n    values = arrayValues;\n  } else {\n    throwError('invalid tuple value', INVALID_ARGUMENT, {\n      coderType: 'tuple',\n      value: values,\n    });\n  }\n\n  if (coders.length !== values.length) {\n    throwError('types/value length mismatch', INVALID_ARGUMENT, {\n      coderType: 'tuple',\n      value: values,\n    });\n  }\n\n  const parts: Array<{ dynamic: boolean; value: any }> = [];\n\n  coders.forEach((coder, index) => {\n    parts.push({ dynamic: coder.dynamic, value: coder.encode(values[index]) });\n  });\n\n  let staticSize = 0;\n  let dynamicSize = 0;\n  parts.forEach((part) => {\n    if (part.dynamic) {\n      staticSize += 32;\n      dynamicSize += alignSize(part.value.length);\n    } else {\n      staticSize += alignSize(part.value.length);\n      // todo : is it to be static size not alignSize?\n    }\n  });\n\n  let offset = 0;\n  let dynamicOffset = staticSize;\n  const data = new Uint8Array(staticSize + dynamicSize);\n\n  parts.forEach((part) => {\n    if (part.dynamic) {\n      // uint256Coder.encode(dynamicOffset).copy(data, offset);\n      data.set(uint256Coder.encode(new BN(dynamicOffset)), offset);\n      offset += 32;\n\n      // part.value.copy(data, dynamicOffset);  @TODO\n      data.set(part.value, dynamicOffset);\n      dynamicOffset += alignSize(part.value.length);\n    } else {\n      // part.value.copy(data, offset);  @TODO\n      data.set(part.value, offset);\n      offset += alignSize(part.value.length);\n    }\n  });\n\n  return data;\n}\n\n/** @hidden */\nfunction unpack(coders: Coder[], data: Uint8Array, offset: number): DecodedResult {\n  const baseOffset = offset;\n  let consumed = 0;\n  const value: any = [];\n  coders.forEach((coder) => {\n    let result: DecodedResult;\n    if (coder.dynamic) {\n      const dynamicOffset = uint256Coder.decode(data, offset);\n      result = coder.decode(data, baseOffset + dynamicOffset.value.toNumber());\n      // The dynamic part is leap-frogged somewhere else; doesn't count towards size\n      result.consumed = dynamicOffset.consumed;\n    } else {\n      result = coder.decode(data, offset);\n    }\n\n    if (result.value !== undefined) {\n      value.push(result.value);\n    }\n\n    offset += result.consumed;\n    consumed += result.consumed;\n  });\n\n  coders.forEach((coder: Coder, index: number) => {\n    let name: string | undefined = coder.localName;\n    if (!name) {\n      return;\n    }\n\n    if (name === 'length') {\n      name = '_length';\n    }\n\n    if (value[name] != null) {\n      return;\n    }\n\n    value[name] = value[index];\n  });\n\n  return {\n    value,\n    consumed,\n  };\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderArray extends Coder {\n  readonly coder: Coder;\n  readonly length: number;\n  constructor(coerceFunc: CoerceFunc, coder: Coder, length: number, localName: string) {\n    const type = coder.type + '[' + (length >= 0 ? length : '') + ']';\n    const dynamic = length === -1 || coder.dynamic;\n    super(coerceFunc, 'array', type, localName, dynamic);\n\n    this.coder = coder;\n    this.length = length;\n  }\n\n  encode(value: any[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      throwError('expected array value', INVALID_ARGUMENT, {\n        arg: this.localName,\n        coderType: 'array',\n        value,\n      });\n    }\n\n    let count = this.length;\n\n    let result = new Uint8Array(0);\n    if (count === -1) {\n      count = value.length;\n      result = uint256Coder.encode(new BN(count));\n    }\n\n    checkArgumentCount(\n      count,\n      value.length,\n      ' in coder array' + (this.localName ? ' ' + this.localName : ''),\n    );\n\n    const coders = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < value.length; i++) {\n      coders.push(this.coder);\n    }\n\n    return concat([result, pack(coders, value)]);\n  }\n\n  decode(data: Uint8Array, offset: number) {\n    // @TODO:\n    // if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n    let consumed = 0;\n\n    let count = this.length;\n\n    let decodedLength: DecodedResult = { consumed: 0, value: undefined };\n    if (count === -1) {\n      try {\n        decodedLength = uint256Coder.decode(data, offset);\n      } catch (error) {\n        throwError('insufficient data for dynamic array length', INVALID_ARGUMENT, {\n          arg: this.localName,\n          coderType: 'array',\n          value: error.value,\n        });\n      }\n      try {\n        count = decodedLength.value.toNumber();\n      } catch (error) {\n        throwError('array count too large', INVALID_ARGUMENT, {\n          arg: this.localName,\n          coderType: 'array',\n          value: decodedLength.value.toString(),\n        });\n      }\n      consumed += decodedLength.consumed;\n      offset += decodedLength.consumed;\n    }\n\n    const coders = [];\n    for (let i = 0; i < count; i++) {\n      coders.push(new CoderAnonymous(this.coder));\n    }\n\n    const result = unpack(coders, data, offset);\n    result.consumed += consumed;\n    result.value = this.coerceFunc(this.type, result.value);\n    return result;\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nclass CoderTuple extends Coder {\n  readonly coders: Coder[];\n  constructor(coerceFunc: CoerceFunc, coders: Coder[], localName: string) {\n    let dynamic = false;\n    const types: string[] = [];\n    coders.forEach((coder) => {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n      types.push(coder.type);\n    });\n    const type = 'tuple(' + types.join(',') + ')';\n\n    super(coerceFunc, 'tuple', type, localName, dynamic);\n    this.coders = coders;\n  }\n\n  encode(value: any[]): Uint8Array {\n    return pack(this.coders, value);\n  }\n\n  decode(data: Uint8Array, offset: number): DecodedResult {\n    const result = unpack(this.coders, data, offset);\n    result.value = this.coerceFunc(this.type, result.value);\n\n    return result;\n  }\n}\n\n/** @hidden */\nfunction splitNesting(value: string): any[] {\n  value = value.trim();\n\n  const result = [];\n  let accum = '';\n  let depth = 0;\n\n  // tslint:disable-next-line: prefer-for-of\n  for (let offset = 0; offset < value.length; offset++) {\n    const c = value[offset];\n    if (c === ',' && depth === 0) {\n      result.push(accum);\n      accum = '';\n    } else {\n      accum += c;\n      if (c === '(') {\n        depth++;\n      } else if (c === ')') {\n        depth--;\n        if (depth === -1) {\n          throw new Error('unbalanced parenthsis');\n        }\n      }\n    }\n  }\n  if (accum) {\n    result.push(accum);\n  }\n\n  return result;\n}\n\n// @TODO: Is there a way to return \"class\"?\n/** @hidden */\nconst paramTypeSimple: { [key: string]: any } = {\n  address: CoderAddress,\n  bool: CoderBoolean,\n  string: CoderString,\n  bytes: CoderDynamicBytes,\n};\n\n/** @hidden */\nfunction getTupleParamCoder(\n  coerceFunc: CoerceFunc,\n  components: any[],\n  localName: string,\n): CoderTuple {\n  if (!components) {\n    components = [];\n  }\n  const coders: Coder[] = [];\n  components.forEach((component) => {\n    coders.push(getParamCoder(coerceFunc, component));\n  });\n\n  return new CoderTuple(coerceFunc, coders, localName);\n}\n\n/** @hidden */\nfunction getParamCoder(coerceFunc: CoerceFunc, param: ParamType | any): any {\n  const coder = paramTypeSimple[param.type];\n  if (coder) {\n    return new coder(coerceFunc, param.name);\n  }\n  const matcher = param.type.match(paramTypeNumber);\n  if (matcher) {\n    const size = parseInt(matcher[2] || '256', 10);\n    if (size === 0 || size > 256 || size % 8 !== 0) {\n      throwError('invalid ' + matcher[1] + ' bit length', INVALID_ARGUMENT, {\n        arg: 'param',\n        value: param,\n      });\n    }\n    return new CoderNumber(coerceFunc, size / 8, matcher[1] === 'int', param.name || '');\n  }\n\n  const matcher2 = param.type.match(paramTypeBytes);\n  if (matcher2) {\n    const size = parseInt(matcher2[1], 10);\n    if (size === 0 || size > 32) {\n      throwError('invalid bytes length', INVALID_ARGUMENT, {\n        arg: 'param',\n        value: param,\n      });\n    }\n    return new CoderFixedBytes(coerceFunc, size, param.name || '');\n  }\n\n  const matcher3 = param.type.match(paramTypeArray);\n  if (matcher3) {\n    const size = parseInt(matcher3[2] || '-1', 10);\n    param = shallowCopy(param);\n    param.type = matcher3[1];\n    param = deepCopy(param);\n    return new CoderArray(coerceFunc, getParamCoder(coerceFunc, param), size, param.name || '');\n  }\n\n  if (param.type.substring(0, 5) === 'tuple') {\n    return getTupleParamCoder(coerceFunc, param.components || [], param.name || '');\n  }\n\n  if (param.type === '') {\n    return new CoderNull(coerceFunc, param.name || '');\n  }\n\n  throwError('invalid type', INVALID_ARGUMENT, {\n    arg: 'type',\n    value: param.type,\n  });\n}\n\n/** @hidden */\nexport enum UnicodeNormalizationForm {\n  current = '',\n  NFC = 'NFC',\n  NFD = 'NFD',\n  NFKC = 'NFKC',\n  NFKD = 'NFKD',\n}\n\n/** @hidden */\nexport function toUtf8Bytes(\n  str: string,\n  form: UnicodeNormalizationForm = UnicodeNormalizationForm.current,\n): Uint8Array {\n  if (form !== UnicodeNormalizationForm.current) {\n    checkNormalize();\n    str = str.normalize(form);\n  }\n\n  const result = [];\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push((c >> 6) | 0xc0);\n      result.push((c & 0x3f) | 0x80);\n    } else if ((c & 0xfc00) === 0xd800) {\n      i++;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new Error('invalid utf-8 string');\n      }\n\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push((c >> 18) | 0xf0);\n      result.push(((c >> 12) & 0x3f) | 0x80);\n      result.push(((c >> 6) & 0x3f) | 0x80);\n      result.push((c & 0x3f) | 0x80);\n    } else {\n      result.push((c >> 12) | 0xe0);\n      result.push(((c >> 6) & 0x3f) | 0x80);\n      result.push((c & 0x3f) | 0x80);\n    }\n  }\n\n  return arrayify(result) || new Uint8Array();\n}\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\n/** @hidden */\nexport function toUtf8String(bytes: Arrayish, ignoreErrors?: boolean): string {\n  bytes = arrayify(bytes) || new Uint8Array();\n\n  let result = '';\n  let i = 0;\n\n  // Invalid bytes are ignored\n  while (i < bytes.length) {\n    const c = bytes[i++];\n    // 0xxx xxxx\n    if (c >> 7 === 0) {\n      result += String.fromCharCode(c);\n      continue;\n    }\n\n    // Multibyte; how many bytes left for this character?\n    let extraLength = null;\n    let overlongMask = null;\n\n    // 110x xxxx 10xx xxxx\n    if ((c & 0xe0) === 0xc0) {\n      extraLength = 1;\n      overlongMask = 0x7f;\n\n      // 1110 xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf0) === 0xe0) {\n      extraLength = 2;\n      overlongMask = 0x7ff;\n\n      // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf8) === 0xf0) {\n      extraLength = 3;\n      overlongMask = 0xffff;\n    } else {\n      if (!ignoreErrors) {\n        if ((c & 0xc0) === 0x80) {\n          throw new Error('invalid utf8 byte sequence; unexpected continuation byte');\n        }\n        throw new Error('invalid utf8 byte sequence; invalid prefix');\n      }\n      continue;\n    }\n\n    // Do we have enough bytes in our data?\n    if (i + extraLength > bytes.length) {\n      if (!ignoreErrors) {\n        throw new Error('invalid utf8 byte sequence; too short');\n      }\n\n      // If there is an invalid unprocessed byte, skip continuation bytes\n      for (; i < bytes.length; i++) {\n        if (bytes[i] >> 6 !== 0x02) {\n          break;\n        }\n      }\n\n      continue;\n    }\n\n    // Remove the length prefix from the char\n    let res: number | null = c & ((1 << (8 - extraLength - 1)) - 1);\n\n    for (let j = 0; j < extraLength; j++) {\n      const nextChar = bytes[i];\n\n      // Invalid continuation byte\n      if ((nextChar & 0xc0) !== 0x80) {\n        res = null;\n        break;\n      }\n\n      res = (res << 6) | (nextChar & 0x3f);\n      i++;\n    }\n\n    if (res === null) {\n      if (!ignoreErrors) {\n        throw new Error('invalid utf8 byte sequence; invalid continuation byte');\n      }\n      continue;\n    }\n\n    // Check for overlong seuences (more bytes than needed)\n    if (res <= overlongMask) {\n      if (!ignoreErrors) {\n        throw new Error('invalid utf8 byte sequence; overlong');\n      }\n      continue;\n    }\n\n    // Maximum code point\n    if (res > 0x10ffff) {\n      if (!ignoreErrors) {\n        throw new Error('invalid utf8 byte sequence; out-of-range');\n      }\n      continue;\n    }\n\n    // Reserved for UTF-16 surrogate halves\n    if (res >= 0xd800 && res <= 0xdfff) {\n      if (!ignoreErrors) {\n        throw new Error('invalid utf8 byte sequence; utf-16 surrogate');\n      }\n      continue;\n    }\n\n    if (res <= 0xffff) {\n      result += String.fromCharCode(res);\n      continue;\n    }\n\n    res -= 0x10000;\n    result += String.fromCharCode(((res >> 10) & 0x3ff) + 0xd800, (res & 0x3ff) + 0xdc00);\n  }\n\n  return result;\n}\n\n/** @hidden */\nexport function formatBytes32String(text: string): string {\n  // Get the bytes\n  const bytes = toUtf8Bytes(text);\n\n  // Check we have room for null-termination\n  if (bytes.length > 31) {\n    throw new Error('bytes32 string must be less than 32 bytes');\n  }\n\n  // Zero-pad (implicitly null-terminates)\n  return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\n\n/** @hidden */\nexport function parseBytes32String(bytes: Arrayish): string {\n  const data = arrayify(bytes) || new Uint8Array();\n\n  // Must be 32 bytes with a null-termination\n  if (data.length !== 32) {\n    throw new Error('invalid bytes32 - not 32 bytes long');\n  }\n  if (data[31] !== 0) {\n    throw new Error('invalid bytes32 sdtring - no null terminator');\n  }\n\n  // Find the null termination\n  let length = 31;\n  while (data[length - 1] === 0) {\n    length--;\n  }\n\n  // Determine the string value\n  return toUtf8String(data.slice(0, length));\n}\n\n/** @hidden */\nexport function isType(object: any, type: string): boolean {\n  return object && object._ethersType === type;\n}\n\n/** @hidden */\nexport function shallowCopy(object: any): any {\n  const result: any = {};\n  // tslint:disable-next-line: forin\n  for (const key in object) {\n    result[key] = object[key];\n  }\n  return result;\n}\n\n/** @hidden */\nconst opaque: { [key: string]: boolean } = {\n  boolean: true,\n  number: true,\n  string: true,\n};\n\n/** @hidden */\nexport function deepCopy(object: any, frozen?: boolean): any {\n  // Opaque objects are not mutable, so safe to copy by assignment\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return object;\n  }\n\n  // Arrays are mutable, so we need to create a copy\n  if (Array.isArray(object)) {\n    const result = object.map((item) => deepCopy(item, frozen));\n    if (frozen) {\n      Object.freeze(result);\n    }\n    return result;\n  }\n\n  if (typeof object === 'object') {\n    // Some internal objects, which are already immutable\n    if (isType(object, 'BigNumber')) {\n      return object;\n    }\n    if (isType(object, 'Description')) {\n      return object;\n    }\n    if (isType(object, 'Indexed')) {\n      return object;\n    }\n\n    const result: { [key: string]: any } = {};\n    // tslint:disable-next-line: forin\n    for (const key in object) {\n      const value = object[key];\n      if (value === undefined) {\n        continue;\n      }\n      defineReadOnly(result, key, deepCopy(value, frozen));\n    }\n\n    if (frozen) {\n      Object.freeze(result);\n    }\n\n    return result;\n  }\n\n  // The function type is also immutable, so safe to copy by assignment\n  if (typeof object === 'function') {\n    return object;\n  }\n\n  throw new Error('Cannot deepCopy ' + typeof object);\n}\n\n// tslint:disable-next-line: max-classes-per-file\n/** @hidden */\nexport class AbiCoder {\n  coerceFunc: CoerceFunc;\n  constructor(coerceFunc?: CoerceFunc) {\n    checkNew(this, AbiCoder);\n\n    if (!coerceFunc) {\n      coerceFunc = defaultCoerceFunc;\n    }\n    this.coerceFunc = coerceFunc;\n  }\n\n  encode(types: Array<string | ParamType>, values: any[]): string {\n    if (types.length !== values.length) {\n      throwError('types/values length mismatch', INVALID_ARGUMENT, {\n        count: { types: types.length, values: values.length },\n        value: { types, values },\n      });\n    }\n\n    const coders: Coder[] = [];\n    types.forEach((type) => {\n      // Convert types to type objects\n      //   - \"uint foo\" => { type: \"uint\", name: \"foo\" }\n      //   - \"tuple(uint, uint)\" => { type: \"tuple\", components: [ { type: \"uint\" }, { type: \"uint\" }, ] }\n\n      let typeObject: ParamType | null = null;\n      // tslint:disable-next-line: prefer-conditional-expression\n      if (typeof type === 'string') {\n        typeObject = parseParam(type);\n      } else {\n        typeObject = type;\n      }\n\n      coders.push(getParamCoder(this.coerceFunc, typeObject));\n    }, this);\n    const encodedArray = new CoderTuple(this.coerceFunc, coders, '_').encode(values);\n    return hexlify(encodedArray);\n  }\n\n  decode(types: Array<string | ParamType>, data: Arrayish): any {\n    const coders: Coder[] = [];\n    types.forEach((type) => {\n      // See encode for details\n      let typeObject: ParamType | null = null;\n      // tslint:disable-next-line: prefer-conditional-expression\n      if (typeof type === 'string') {\n        typeObject = parseParam(type);\n      } else {\n        typeObject = deepCopy(type);\n      }\n\n      coders.push(getParamCoder(this.coerceFunc, typeObject));\n    }, this);\n    const result = new CoderTuple(this.coerceFunc, coders, '_').decode(\n      arrayify(data) || new Uint8Array(),\n      0,\n    ).value;\n    return result;\n  }\n}\n\n/** @hidden */\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { isObject, isArray } from 'avalanche-js-utils';\nimport { BN } from 'avalanche-js-crypto';\n\nexport const jsonInterfaceMethodToString = (json: any): string => {\n  if (isObject(json) && json.name && json.name.includes('(')) {\n    return json.name;\n  }\n\n  return `${json.name}(${flattenTypes(false, json.inputs).join(',')})`;\n};\n\nexport const flattenTypes = (includeTuple: any, puts: any[]) => {\n  // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n  const types: any[] = [];\n\n  puts.forEach((param: any) => {\n    if (typeof param.components === 'object') {\n      if (param.type.substring(0, 5) !== 'tuple') {\n        throw new Error('components found but type is not tuple; report on GitHub');\n      }\n      let suffix = '';\n      const arrayBracket = param.type.indexOf('[');\n      if (arrayBracket >= 0) {\n        suffix = param.type.substring(arrayBracket);\n      }\n      const result = flattenTypes(includeTuple, param.components);\n      // console.log(\"result should have things: \" + result)\n      if (isArray(result) && includeTuple) {\n        // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n        types.push(`tuple(${result.join(',')})${suffix}`);\n      } else if (!includeTuple) {\n        // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n        types.push(`(${result.join(',')})${suffix}`);\n      } else {\n        // console.log(\"its a single type within a tuple: \" + result.types)\n        types.push(`(${result})`);\n      }\n    } else {\n      // console.log(\"its a type and not directly in a tuple: \" + param.type)\n      types.push(param.type);\n    }\n  });\n\n  return types;\n};\n\nexport function bnToString(result: any): string | any {\n  if (BN.isBN(result)) {\n    return result.toString();\n  } else {\n    return result;\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { AbiCoder as ABICoder, ParamType, toUtf8Bytes } from './abiCoder';\nimport { isObject, isArray } from 'avalanche-js-utils';\nimport { keccak256, Arrayish } from 'avalanche-js-crypto';\nimport { jsonInterfaceMethodToString, bnToString } from './utils';\n\nexport class AbiCoderClass {\n  coder: ABICoder;\n  constructor(coder: ABICoder) {\n    this.coder = coder;\n  }\n  encodeFunctionSignature(functionName: any) {\n    if (isObject(functionName)) {\n      functionName = jsonInterfaceMethodToString(functionName);\n    }\n    const result = keccak256(toUtf8Bytes(functionName));\n    return result.slice(0, 10);\n  }\n  encodeEventSignature(functionName: any) {\n    if (isObject(functionName)) {\n      functionName = jsonInterfaceMethodToString(functionName);\n    }\n    const result = keccak256(toUtf8Bytes(functionName));\n    return result;\n  }\n  encodeParameter(types: string | ParamType, param: any) {\n    return this.encodeParameters([types], [param]);\n  }\n  encodeParameters(types: Array<string | ParamType>, params: any[]) {\n    return this.coder.encode(types, params);\n  }\n  encodeFunctionCall(jsonInterface: any, params: any[]) {\n    return (\n      this.encodeFunctionSignature(jsonInterface) +\n      this.encodeParameters(jsonInterface.inputs, params).replace('0x', '')\n    );\n  }\n  decodeParameter(type: ParamType, bytes: Arrayish) {\n    return this.decodeParameters([type], bytes)[0];\n  }\n  decodeParameters(outputs: ParamType[], bytes: Arrayish) {\n    if (isArray(outputs) && outputs.length === 0) {\n      throw new Error('Empty outputs array given!');\n    }\n\n    if (!bytes || bytes === '0x' || bytes === '0X') {\n      throw new Error(`Invalid bytes string given: ${bytes}`);\n    }\n\n    const result = this.coder.decode(outputs, bytes);\n\n    const returnValues: any = {};\n    let decodedValue;\n\n    if (isArray(result)) {\n      if (outputs.length > 1) {\n        outputs.forEach((output: any, i) => {\n          decodedValue = result[i];\n\n          if (decodedValue === '0x') {\n            decodedValue = null;\n          }\n\n          returnValues[i] = bnToString(decodedValue);\n\n          if (isObject(output) && output.name) {\n            returnValues[output.name] = bnToString(decodedValue);\n          }\n        });\n\n        return returnValues;\n      }\n\n      return bnToString(result);\n    }\n\n    if (isObject(outputs[0]) && outputs[0].name) {\n      returnValues[outputs[0].name] = bnToString(result);\n    }\n\n    returnValues[0] = bnToString(result);\n\n    return returnValues;\n  }\n\n  decodeLog(inputs: any, data = '', topics: any) {\n    const returnValues: any = {};\n    let topicCount = 0;\n    let value;\n    const nonIndexedInputKeys: any[] = [];\n    const nonIndexedInputItems: any[] = [];\n\n    if (!isArray(topics)) {\n      topics = [topics];\n    }\n\n    inputs.forEach((input: any, i: number) => {\n      if (input.indexed) {\n        if (input.type === 'string') {\n          return;\n        }\n\n        value = topics[topicCount];\n\n        if (this.isStaticType(input.type)) {\n          value = this.decodeParameter(input.type, topics[topicCount]);\n        }\n\n        returnValues[i] = bnToString(value);\n        returnValues[input.name] = bnToString(value);\n        topicCount++;\n\n        return;\n      }\n\n      nonIndexedInputKeys.push(i);\n      nonIndexedInputItems.push(input);\n    });\n\n    if (data) {\n      const values = this.decodeParameters(nonIndexedInputItems, data);\n\n      let decodedValue;\n      nonIndexedInputKeys.forEach((itemKey, index) => {\n        decodedValue = values[index];\n\n        returnValues[itemKey] = bnToString(decodedValue);\n        returnValues[nonIndexedInputItems[index].name] = bnToString(decodedValue);\n      });\n    }\n\n    return returnValues;\n  }\n  isStaticType(type: any) {\n    if (type === 'bytes') {\n      return false;\n    }\n\n    if (type === 'string') {\n      return false;\n    }\n\n    if (type.indexOf('[') && type.slice(type.indexOf('[')).length === 2) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { AbiCoderClass } from './api';\nimport { AbiCoder as EtherCoder } from './abiCoder';\n\nexport function AbiCoder() {\n  return new AbiCoderClass(new EtherCoder());\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { isArray } from 'avalanche-js-utils';\nimport { AbiItemModel, AbiOutput, AbiInput } from './types';\n\nexport class AbiItem {\n  abiItem: AbiItemModel;\n  signature: string;\n  name: string;\n  payable: boolean;\n  anonymous: boolean;\n  type?: string;\n  inputs?: AbiInput[];\n  outputs?: AbiOutput[];\n  contractMethodParameters: any[];\n\n  // constructor\n  constructor(abiItem: AbiItemModel | any) {\n    this.abiItem = abiItem;\n    this.signature = this.abiItem.signature;\n    this.name = this.abiItem.name;\n    this.payable = this.abiItem.payable;\n    this.anonymous = this.abiItem.anonymous;\n    this.type = this.abiItem.type;\n    this.inputs = this.abiItem.inputs;\n    this.outputs = this.abiItem.outputs;\n    this.contractMethodParameters = [];\n  }\n\n  getInputLength() {\n    if (isArray(this.abiItem.inputs)) {\n      return this.abiItem.inputs.length;\n    }\n\n    return 0;\n  }\n\n  getInputs() {\n    if (isArray(this.abiItem.inputs)) {\n      return this.abiItem.inputs;\n    }\n\n    return [];\n  }\n\n  getOutputs() {\n    if (isArray(this.abiItem.outputs)) {\n      return this.abiItem.outputs;\n    }\n\n    return [];\n  }\n\n  getIndexedInputs() {\n    return this.getInputs().filter((input) => {\n      return input.indexed === true;\n    });\n  }\n\n  isOfType(type: string) {\n    return this.abiItem.type === type;\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { AbiItemModel } from './types';\n\nexport class AbiModel {\n  abi: any;\n\n  constructor(mappedAbi: any) {\n    this.abi = mappedAbi;\n  }\n\n  getMethod(name: string): AbiItemModel | false {\n    if (this.hasMethod(name)) {\n      return this.abi.methods[name];\n    }\n\n    return false;\n  }\n\n  getMethods(): AbiItemModel[] {\n    return this.abi.methods;\n  }\n\n  getEvent(name: string): AbiItemModel | false {\n    if (this.hasEvent(name)) {\n      return this.abi.events[name];\n    }\n\n    return false;\n  }\n\n  getFallback(): AbiItemModel | false {\n    if (this.hasFallback()) {\n      return this.abi.fallback;\n    }\n    return false;\n  }\n\n  getReceive(): AbiItemModel | false {\n    if (this.hasReceive()) {\n      return this.abi.receive;\n    }\n    return false;\n  }\n\n  getEvents(): AbiItemModel[] {\n    return this.abi.events;\n  }\n\n  getEventBySignature(signature: string): AbiItemModel | undefined {\n    let event;\n\n    Object.keys(this.abi.events).forEach((key) => {\n      if (this.abi.events[key].signature === signature) {\n        event = this.abi.events[key];\n      }\n    });\n\n    return event;\n  }\n\n  hasMethod(name: string): boolean {\n    return typeof this.abi.methods[name] !== 'undefined';\n  }\n\n  hasFallback(): boolean {\n    return typeof this.abi.fallback !== 'undefined';\n  }\n\n  hasReceive(): boolean {\n    return typeof this.abi.receive !== 'undefined';\n  }\n\n  hasEvent(name: string): boolean {\n    return typeof this.abi.events[name] !== 'undefined';\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { isArray } from 'avalanche-js-utils';\nimport { AbiItem } from '../models/AbiItemModel';\nimport { AbiModel } from '../models/AbiModel';\nimport { AbiItemModel } from '../models/types';\nimport { jsonInterfaceMethodToString } from '../abi/utils';\nimport { AbiCoderClass } from '../abi/api';\n\nexport const abiMapper = (abi: any[], abiCoder: AbiCoderClass): AbiModel => {\n  const mappedAbiItems: any = {\n    methods: {},\n    events: {},\n    fallback: undefined,\n    receive: undefined,\n  };\n  let hasConstructor = false;\n\n  abi.forEach((abiItem: AbiItemModel) => {\n    abiItem.constant = isConstant(abiItem);\n    abiItem.payable = isPayable(abiItem);\n\n    if (abiItem.name) {\n      abiItem.funcName = jsonInterfaceMethodToString(abiItem);\n    }\n\n    let abiItemModel;\n\n    if (abiItem.type === 'function') {\n      abiItem.signature = abiCoder.encodeFunctionSignature(abiItem.funcName);\n\n      abiItemModel = new AbiItem(abiItem);\n\n      // Check if an method already exists with this name and if it exists than create an array and push this abiItem\n      // into it. This will be used if there are methods with the same name but with different arguments.\n      if (!mappedAbiItems.methods[abiItem.name]) {\n        mappedAbiItems.methods[abiItem.name] = abiItemModel;\n      } else {\n        if (isArray(mappedAbiItems.methods[abiItem.name])) {\n          mappedAbiItems.methods[abiItem.name].push(abiItemModel);\n        } else {\n          mappedAbiItems.methods[abiItem.name] = [\n            mappedAbiItems.methods[abiItem.name],\n            abiItemModel,\n          ];\n        }\n      }\n\n      mappedAbiItems.methods[abiItem.signature] = abiItemModel;\n      mappedAbiItems.methods[abiItem.funcName] = abiItemModel;\n\n      return;\n    }\n\n    if (abiItem.type === 'event') {\n      abiItem.signature = abiCoder.encodeEventSignature(abiItem.funcName);\n\n      abiItemModel = new AbiItem(abiItem);\n\n      if (\n        !mappedAbiItems.events[abiItem.name] ||\n        mappedAbiItems.events[abiItem.name].name === 'bound '\n      ) {\n        mappedAbiItems.events[abiItem.name] = abiItemModel;\n      }\n\n      mappedAbiItems.events[abiItem.signature] = abiItemModel;\n      mappedAbiItems.events[abiItem.funcName] = abiItemModel;\n    }\n\n    if (abiItem.type === 'fallback' || abiItem.type === 'receive') {\n      abiItem.signature = abiItem.type;\n      mappedAbiItems[abiItem.type] = new AbiItem(abiItem);\n    }\n\n    if (abiItem.type === 'constructor') {\n      abiItem.signature = abiItem.type;\n      // tslint:disable-next-line: no-string-literal\n      mappedAbiItems.methods['contractConstructor'] = new AbiItem(abiItem);\n\n      hasConstructor = true;\n    }\n  });\n  if (!hasConstructor) {\n    // tslint:disable-next-line: no-string-literal\n    mappedAbiItems.methods['contractConstructor'] = new AbiItem({\n      inputs: [],\n      payable: false,\n      constant: false,\n      type: 'constructor',\n    });\n  }\n  return new AbiModel(mappedAbiItems);\n};\n\nexport const isConstant = (abiItem: AbiItemModel) => {\n  return (\n    abiItem.stateMutability === 'view' || abiItem.stateMutability === 'pure' || abiItem.constant\n  );\n};\n\nexport const isPayable = (abiItem: AbiItemModel) => {\n  return abiItem.stateMutability === 'payable' || abiItem.payable;\n};\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { isArray } from 'avalanche-js-utils';\nimport { AbiItemModel } from '../models/types';\nimport { AbiCoderClass } from '../abi/api';\n\nexport const methodEncoder = (\n  abiCoder: AbiCoderClass,\n  abiItemModel: AbiItemModel,\n  deployData: string,\n) => {\n  if (abiItemModel.isOfType('receive')) {\n    return undefined;\n  }\n  if (abiItemModel.isOfType('fallback')) {\n    return abiItemModel.contractMethodParameters.length\n      ? abiItemModel.contractMethodParameters[0]\n      : undefined;\n  }\n\n  let encodedParameters = abiCoder.encodeParameters(\n    abiItemModel.getInputs(),\n    abiItemModel.contractMethodParameters,\n  );\n\n  if (encodedParameters.startsWith('0x')) {\n    encodedParameters = encodedParameters.slice(2);\n  }\n\n  if (abiItemModel.isOfType('constructor')) {\n    if (!deployData) {\n      throw new Error(\n        'The contract has no contract data option set. This is necessary to append the constructor parameters.',\n      );\n    }\n\n    return deployData + encodedParameters;\n  }\n\n  if (abiItemModel.isOfType('function')) {\n    return abiItemModel.signature + encodedParameters;\n  }\n\n  return encodedParameters;\n};\n\nexport const eventFilterEncoder = (\n  abiCoder: AbiCoderClass,\n  abiItemModel: AbiItemModel,\n  filter: any,\n) => {\n  const topics: any[] = [];\n\n  abiItemModel.getIndexedInputs().forEach((input) => {\n    if (filter[input.name]) {\n      let filterItem = filter[input.name];\n\n      if (isArray(filterItem)) {\n        filterItem = filterItem.map((item: any) => {\n          return abiCoder.encodeParameter(input.type, item);\n        });\n\n        topics.push(filterItem);\n\n        return;\n      }\n\n      topics.push(abiCoder.encodeParameter(input.type, filterItem));\n\n      return;\n    }\n\n    topics.push(null);\n  });\n\n  return topics;\n};\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nexport enum ContractStatus {\n  INITIALISED = 'initialised',\n  TESTED = 'tested',\n  ERROR = 'error',\n  SIGNED = 'signed',\n  SENT = 'sent',\n  REJECTED = 'rejected',\n  DEPLOYED = 'deployed',\n  CALLED = 'called',\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n */\n\nimport { Wallet } from 'avalanche-js-account';\nimport { TransactionFactory, Transaction, TxStatus } from 'avalanche-js-transaction';\nimport { RPCMethod, getResultForData, Emitter } from 'avalanche-js-network';\nimport { hexToBN, Unit } from 'avalanche-js-utils';\nimport { getAddress } from 'avalanche-js-crypto';\nimport { AbiItemModel } from '../models/types';\nimport { Contract } from '../contract';\nimport { methodEncoder } from '../utils/encoder';\nimport { ContractStatus } from '../utils/status';\n\nexport class ContractMethod {\n  contract: Contract;\n  params: any;\n  methodKey: string;\n  wallet: Wallet | any;\n  abiItem: AbiItemModel;\n  callResponse?: any;\n  callPayload?: any;\n\n  protected transaction: Transaction;\n  constructor(methodKey: string, params: any, abiItem: AbiItemModel, contract: Contract) {\n    this.methodKey = methodKey;\n    this.contract = contract;\n    this.wallet = contract.wallet;\n    this.params = params;\n    this.abiItem = abiItem;\n    this.transaction = this.createTransaction();\n    this.callPayload = undefined;\n    this.callResponse = undefined;\n  }\n  send(params: any): Emitter {\n    if (params && !params.gasLimit) {\n      params.gasLimit = params.gas;\n    }\n    try {\n      let gasLimit: any = params.gasLimit; // change by estimateGas\n      const signTxs = () => {\n        this.transaction = this.transaction.map((tx: any) => {\n          return { ...tx, ...params, gasLimit };\n        });\n\n        const waitConfirm: boolean = params && params.waitConfirm === false ? false : true;\n        const updateNonce: boolean = params && params.nonce !== undefined ? false : true;\n        this.signTransaction(updateNonce)\n          .then((signed) => {\n            this.sendTransaction(signed).then((sent) => {\n              const [txn, id] = sent;\n              this.transaction = txn;\n              this.contract.transaction = this.transaction;\n              if (this.transaction.isRejected()) {\n                this.transaction.emitter.reject(id); // in this case, id is error message\n              } else if (waitConfirm) {\n                this.confirm(id).then(() => {\n                  this.transaction.emitter.resolve(this.contract);\n                });\n              } else {\n                this.transaction.emitter.resolve(this.contract);\n              }\n            });\n          })\n          .catch((error) => {\n            this.transaction.emitter.reject(error);\n          });\n      };\n\n      if (gasLimit === undefined) {\n        this.estimateGas(params).then((gas) => {\n          gasLimit = hexToBN(gas);\n          signTxs();\n        });\n      } else {\n        signTxs();\n      }\n      return this.transaction.emitter;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async call(options: any, blockNumber: any = 'latest') {\n    if (options && !options.gasLimit) {\n      options.gasLimit = options.gas;\n    }\n    try {\n      const shardID =\n        options !== undefined && options.shardID !== undefined\n          ? options.shardID\n          : this.contract.shardID;\n\n      this.transaction = this.transaction.map((tx: any) => {\n        return {\n          ...tx,\n          ...options,\n          nonce: 0,\n        };\n      });\n      const keys: string[] = Object.keys(this.transaction.txPayload);\n\n      interface TxPayload {\n        [key: string]: any;\n        from?: string;\n        to?: string;\n        shardID?: string;\n        gas?: string;\n        gasPrice?: string;\n        value?: string;\n        data?: string;\n        nonce?: string;\n      }\n      interface SendPayload {\n        [key: string]: any;\n        from?: string;\n        to?: string;\n        shardID?: string;\n        gas?: string;\n        gasPrice?: string;\n        value?: string;\n        data?: string;\n        nonce?: string;\n      }\n\n      const txPayload: TxPayload = this.transaction.txPayload;\n      const sendPayload: SendPayload = {};\n\n      for (const key of keys) {\n        // tslint:disable-next-line: no-unused-expression\n        if (txPayload[key] !== '0x') {\n          sendPayload[key] = txPayload[key];\n        }\n      }\n\n      const result =\n        // tslint:disable-line\n        await (<Wallet>this.wallet).messenger.send(\n          RPCMethod.Call,\n          [sendPayload, blockNumber],\n          // tslint:disable-line\n          (<Wallet>this.wallet).messenger.chainPrefix,\n          shardID,\n        );\n      this.callPayload = sendPayload;\n      this.callResponse = result;\n      if (result.isError()) {\n        throw result.message;\n      } else if (result.isResult()) {\n        if (result.result === null) {\n          return this.afterCall(undefined);\n        } else {\n          return this.afterCall(result.result);\n        }\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async estimateGas(options: any) {\n    try {\n      interface Payload {\n        [key: string]: any;\n      }\n\n      const estPayload: Payload = {};\n      const txPayload: Payload = this.transaction.txPayload;\n      const keys: string[] = ['from', 'to', 'gasPrice', 'value', 'data'];\n      for (const key of keys) {\n        if (options && options[key]) {\n          estPayload[key] = options[key];\n        } else if (txPayload[key] !== '0x') {\n          estPayload[key] = txPayload[key];\n        }\n      }\n\n      if (this.abiItem.isOfType('constructor')) {\n        delete estPayload.to;\n      }\n      const result = getResultForData(\n        // tslint:disable-line\n        await (<Wallet>this.wallet).messenger.send(RPCMethod.EstimateGas, [estPayload]),\n      );\n\n      if (result.responseType === 'error') {\n        throw result.message;\n      } else if (result.responseType === 'raw') {\n        throw new Error('Get estimateGas fail');\n      } else {\n        return result;\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  encodeABI() {\n    return methodEncoder(this.contract.abiCoder, this.abiItem, this.contract.data);\n  }\n\n  public debug() {\n    return {\n      callResponse: this.callResponse,\n      callPayload: this.callPayload,\n    };\n  }\n\n  protected async signTransaction(updateNonce: boolean) {\n    try {\n      let signed;\n      signed = this.wallet.signer\n        ? await this.wallet.signTransaction(\n            this.transaction,\n            this.wallet.signer,\n            undefined,\n            updateNonce,\n            'rlp',\n            'latest', // 'pending',\n          )\n        : await this.wallet.signTransaction(\n            this.transaction,\n            updateNonce,\n            'rlp',\n            'latest', // 'pending',\n          );\n      if (this.abiItem.isOfType('constructor')) {\n        this.contract.address = TransactionFactory.getContractAddress(signed);\n      }\n      this.contract.setStatus(ContractStatus.SIGNED);\n      return signed;\n    } catch (error) {\n      throw error;\n    }\n  }\n  protected async sendTransaction(signed: Transaction) {\n    try {\n      const result = await signed.sendTransaction();\n      this.contract.setStatus(ContractStatus.SENT);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n  protected async confirm(id: string) {\n    try {\n      const result = await this.transaction.confirm(\n        id,\n        20,\n        1000,\n        this.transaction ? this.transaction.txParams.shardID : this.contract.shardID,\n      );\n\n      if (result.receipt && result.txStatus === TxStatus.CONFIRMED) {\n        if (this.abiItem.isOfType('constructor')) {\n          this.contract.setStatus(ContractStatus.DEPLOYED);\n        } else {\n          this.contract.setStatus(ContractStatus.CALLED);\n        }\n      } else {\n        this.contract.setStatus(ContractStatus.REJECTED);\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  protected createTransaction() {\n    if (this.wallet.messenger) {\n      if (this.abiItem.isOfType('constructor')) {\n        // tslint:disable-next-line: no-string-literal\n        this.contract.data = this.params[0]['data'] || '0x';\n\n        this.abiItem.contractMethodParameters =\n          // tslint:disable-next-line: no-string-literal\n          this.params[0]['arguments'] || [];\n      } else {\n        this.abiItem.contractMethodParameters = this.params || [];\n      }\n      const defaultOptions = {\n        gasLimit: new Unit(21000000).asWei().toWei(),\n        gasPrice: new Unit(1).asGwei().toWei(),\n      };\n      const txObject = {\n        ...defaultOptions,\n        ...this.contract.options,\n        ...this.params[0],\n        to: this.abiItem.isOfType('constructor')\n          ? '0x'\n          : getAddress(this.contract.address).checksum,\n        data: this.encodeABI(),\n      };\n      // tslint:disable-line\n      const result = new TransactionFactory((<Wallet>this.wallet).messenger).newTx(txObject);\n\n      return result;\n    } else {\n      throw new Error('Messenger is not found');\n    }\n  }\n\n  protected afterCall(response: any) {\n    // length of `0x${methodSig}` is 2+4*2=10\n    if (response.length % 32 === 10 && response.startsWith(this.contract.errorFuncSig)) {\n      const errmsg = this.contract.abiCoder.decodeParameters(\n        [{ type: 'string' }],\n        '0x' + response.slice(10),\n      );\n      throw { revert: errmsg[0] };\n    }\n\n    if (\n      this.abiItem.isOfType('constructor') ||\n      this.abiItem.isOfType('fallback') ||\n      this.abiItem.isOfType('receive')\n    ) {\n      return response;\n    }\n\n    const outputs = this.abiItem.getOutputs();\n    if (outputs.length === 0) {\n      // if outputs is empty, we can't know the call is revert or not\n      return response;\n    }\n    if (!response || response === '0x') {\n      // if outputs isn't empty, treat it as revert\n      throw { revert: response };\n    }\n    if (outputs.length > 1) {\n      return this.contract.abiCoder.decodeParameters(outputs, response);\n    }\n    return this.contract.abiCoder.decodeParameter(outputs[0], response);\n    // return outputs;\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { AbiCoderClass } from '../abi/api';\nimport { AbiModel } from '../models/types';\nimport { Contract } from '../contract';\nimport { ContractMethod } from './method';\n\nexport class MethodFactory {\n  contract: Contract;\n  abiModel: any | AbiModel;\n  abiCoder: AbiCoderClass;\n  private methodKeys: string[];\n\n  // constructor\n  constructor(contract: Contract) {\n    this.contract = contract;\n    this.abiModel = this.contract.abiModel;\n    this.abiCoder = this.contract.abiCoder;\n    this.methodKeys = this.mapMethodKeys();\n  }\n\n  addMethodsToContract() {\n    this.methodKeys.forEach((key: string) => {\n      const newObject: any = {};\n      newObject[key] = (...params: any[]) =>\n        new ContractMethod(key, params, this.abiModel.getMethod(key), this.contract);\n\n      Object.assign(this.contract.methods, newObject);\n    });\n    if (this.abiModel.hasFallback()) {\n      this.contract.fallback = (calldata: string) =>\n        new ContractMethod('fallback', [calldata], this.abiModel.getFallback(), this.contract);\n    }\n    if (this.abiModel.hasReceive()) {\n      this.contract.receive = () =>\n        new ContractMethod('receive', [], this.abiModel.getReceive(), this.contract);\n    }\n    return this.contract;\n  }\n  /**\n   * @function mapMethodKeys\n   * @return {string[]} {description}\n   */\n  private mapMethodKeys(): string[] {\n    return Object.keys(this.abiModel.abi.methods);\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { AbiItemModel } from '../models/types';\nimport { AbiCoderClass } from '../abi/api';\n\nexport const decode = (abiCoder: AbiCoderClass, abiItemModel: AbiItemModel, response: any) => {\n  let argumentTopics = response.topics;\n\n  if (!abiItemModel.anonymous) {\n    argumentTopics = response.topics.slice(1);\n  }\n\n  if (response.data === '0x') {\n    response.data = null;\n  }\n\n  response.returnValues = abiCoder.decodeLog(\n    abiItemModel.getInputs(),\n    response.data,\n    argumentTopics,\n  );\n  response.event = abiItemModel.name;\n  response.signature = abiItemModel.signature;\n  response.raw = {\n    data: response.data,\n    topics: response.topics,\n  };\n\n  if (abiItemModel.anonymous || !response.topics[0]) {\n    response.signature = null;\n  }\n\n  delete response.data;\n  delete response.topics;\n\n  return response;\n};\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { hexlify, isHexString, keccak256, toChecksumAddress } from 'avalanche-js-crypto';\nimport {\n  numberToHex,\n  isArray,\n  // hexToNumber,\n  isString,\n  isAddress,\n  hexToBN,\n} from 'avalanche-js-utils';\nimport { toUtf8Bytes } from '../abi/abiCoder';\n\nexport const inputLogFormatter = (options: any) => {\n  if (options.fromBlock) {\n    options.fromBlock = inputBlockNumberFormatter(options.fromBlock);\n  }\n\n  if (options.toBlock) {\n    options.toBlock = inputBlockNumberFormatter(options.toBlock);\n  }\n\n  // make sure topics, get converted to hex\n  options.topics = options.topics || [];\n  options.topics = options.topics.map((topic: any) => {\n    return isArray(topic) ? topic.map(toTopic) : toTopic(topic);\n  });\n\n  if (options.address) {\n    if (isArray(options.address)) {\n      options.address = options.address.map((addr: string) => {\n        return inputAddressFormatter(addr);\n      });\n    } else {\n      options.address = inputAddressFormatter(options.address);\n    }\n  }\n\n  return options;\n};\n\n/**\n * Formats the output of a log\n *\n * @method outputLogFormatter\n *\n * @param {Object} log object\n *\n * @returns {Object} log\n */\nexport const outputLogFormatter = (log: any) => {\n  // generate a custom log id\n  if (\n    typeof log.blockHash === 'string' &&\n    typeof log.transactionHash === 'string' &&\n    typeof log.logIndex === 'string'\n  ) {\n    const shaId = keccak256(\n      '0x' +\n        log.blockHash.replace('0x', '') +\n        log.transactionHash.replace('0x', '') +\n        log.logIndex.replace('0x', ''),\n    );\n\n    shaId.replace('0x', '').substr(0, 8);\n\n    log.id = `log_${shaId}`;\n  } else if (!log.id) {\n    log.id = null;\n  }\n\n  if (log.blockNumber !== null) {\n    log.blockNumber = hexToBN(log.blockNumber).toNumber();\n  }\n\n  if (log.transactionIndex !== null) {\n    log.transactionIndex = hexToBN(log.transactionIndex).toNumber();\n  }\n\n  if (log.logIndex !== null) {\n    log.logIndex = hexToBN(log.logIndex).toNumber();\n  }\n\n  if (log.address) {\n    log.address = toChecksumAddress(log.address);\n  }\n\n  return log;\n};\n\nexport const inputBlockNumberFormatter = (blockNumber: any) => {\n  if (blockNumber === undefined || blockNumber === null || isPredefinedBlockNumber(blockNumber)) {\n    return blockNumber;\n  }\n\n  if (isHexString(blockNumber)) {\n    if (isString(blockNumber)) {\n      return blockNumber.toLowerCase();\n    }\n\n    return blockNumber;\n  }\n\n  return numberToHex(blockNumber);\n};\n\nexport const isPredefinedBlockNumber = (blockNumber: string) => {\n  return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n};\n\nexport const inputAddressFormatter = (address: string) => {\n  if (isAddress(address)) {\n    return `0x${address.toLowerCase().replace('0x', '')}`;\n  }\n\n  throw new Error(\n    `Provided address \"${address}\" is invalid, the capitalization checksum test failed, or its an indrect IBAN address which can't be converted.`,\n  );\n};\n\nexport const toTopic = (value: any) => {\n  if (value === null || typeof value === 'undefined') {\n    return null;\n  }\n\n  value = String(value);\n\n  if (value.indexOf('0x') === 0) {\n    return value;\n  }\n\n  return hexlify(toUtf8Bytes(value));\n};\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n */\n\nimport { LogSub } from 'avalanche-js-network';\nimport { AbiItemModel } from '../models/types';\nimport { Contract } from '../contract';\nimport { decode as eventLogDecoder } from '../utils/decoder';\nimport { inputLogFormatter, outputLogFormatter } from '../utils/formatter';\nexport class EventMethod extends LogSub {\n  params: any;\n  methodKey: string;\n  contract: Contract;\n  abiItem: AbiItemModel;\n  constructor(methodKey: string, params: any, abiItem: AbiItemModel, contract: Contract) {\n    super(inputLogFormatter(params), contract.wallet.messenger, contract.shardID);\n    this.methodKey = methodKey;\n    this.contract = contract;\n    this.params = params;\n    this.abiItem = abiItem;\n    // this.subscribe();\n  }\n\n  // call() {}\n  // estimateGas() {}\n  // encodeABI() {}\n\n  onNewSubscriptionItem(subscriptionItem: any) {\n    const formatted = outputLogFormatter(\n      subscriptionItem.method !== undefined ? subscriptionItem.params.result : subscriptionItem,\n    );\n    const log = eventLogDecoder(this.contract.abiCoder, this.abiItem, formatted);\n\n    if (log.removed && this.emitter) {\n      this.emitter.emit('changed', log);\n    }\n\n    return log;\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n * @hidden\n */\n\nimport { isArray } from 'avalanche-js-utils';\nimport { AbiCoderClass } from '../abi/api';\nimport { AbiModel, AbiItemModel } from '../models/types';\nimport { Contract } from '../contract';\nimport { EventMethod } from './event';\nimport { inputBlockNumberFormatter } from '../utils/formatter';\nimport { eventFilterEncoder } from '../utils/encoder';\n\nexport class EventFactory {\n  contract: Contract;\n  abiModel: any | AbiModel;\n  abiCoder: AbiCoderClass;\n  private eventKeys: string[];\n\n  // constructor\n  constructor(contract: Contract) {\n    this.contract = contract;\n    this.abiModel = this.contract.abiModel;\n    this.abiCoder = this.contract.abiCoder;\n    this.eventKeys = this.mapEventKeys();\n  }\n\n  addEventsToContract() {\n    this.eventKeys.forEach((key: string) => {\n      const newObject: any = {};\n      newObject[key] = (params: any) =>\n        new EventMethod(\n          key,\n          // params,\n          this.map(this.abiModel.getEvent(key), this.contract, params),\n          this.abiModel.getEvent(key),\n          this.contract,\n        );\n      Object.assign(this.contract.events, newObject);\n    });\n    return this.contract;\n  }\n  /**\n   * @function mapMethodKeys\n   * @return {string[]} {description}\n   */\n  private mapEventKeys(): string[] {\n    return Object.keys(this.abiModel.abi.events);\n  }\n\n  private map(abiItemModel: AbiItemModel, contract: Contract, options: any) {\n    if (!options) {\n      options = {};\n    }\n\n    if (!isArray(options.topics)) {\n      options.topics = [];\n    }\n\n    if (typeof options.fromBlock !== 'undefined') {\n      options.fromBlock = inputBlockNumberFormatter(options.fromBlock);\n    }\n    // else if (contract.defaultBlock !== null) {\n    //   options.fromBlock = contract.defaultBlock;\n    // }\n\n    if (typeof options.toBlock !== 'undefined') {\n      options.toBlock = inputBlockNumberFormatter(options.toBlock);\n    }\n\n    if (typeof options.filter !== 'undefined') {\n      options.topics = options.topics.concat(\n        eventFilterEncoder(this.abiCoder, abiItemModel, options.filter),\n      );\n      delete options.filter;\n    }\n\n    if (!abiItemModel.anonymous) {\n      options.topics.unshift(abiItemModel.signature);\n    }\n\n    if (!options.address) {\n      options.address = contract.address;\n    }\n\n    return options;\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n *\n */\n\nimport { Wallet } from 'avalanche-js-account';\nimport { Messenger } from 'avalanche-js-network';\nimport { Transaction } from 'avalanche-js-transaction';\nimport { AbiCoder } from './abi/index';\nimport { abiMapper } from './utils/mapper';\nimport { ContractOptions } from './utils/options';\nimport { AbiModel } from './models/types';\nimport { AbiCoderClass } from './abi/api';\nimport { MethodFactory } from './methods/methodFactory';\nimport { EventFactory } from './events/eventFactory';\nimport { ContractStatus } from './utils/status';\n\n// class Contract\nexport class Contract {\n  methods: any;\n  events: any;\n  fallback: any = undefined;\n  receive: any = undefined;\n  abi: any = [];\n  abiModel: any | AbiModel;\n  abiCoder: AbiCoderClass;\n  options: ContractOptions | any;\n  wallet: Wallet | any;\n  transaction?: Transaction;\n  status: ContractStatus;\n  shardID: number;\n  errorFunc: string = 'Error(string)';\n  errorFuncSig: string;\n\n  constructor(\n    abi: any = [],\n    address: string = '0x',\n    options: ContractOptions = {},\n    wallet: Wallet,\n    status: ContractStatus = ContractStatus.INITIALISED,\n  ) {\n    // super();\n    this.abi = abi;\n    this.abiCoder = AbiCoder();\n    this.abiModel = abiMapper(abi, this.abiCoder);\n    this.options = options;\n    this.address = this.options.address || address;\n    this.shardID = this.options.shardID || wallet.messenger.currentShard;\n    this.wallet = wallet;\n    this.methods = {};\n    this.events = {};\n    this.runMethodFactory();\n    this.runEventFactory();\n    this.status = status;\n    this.errorFuncSig = this.abiCoder.encodeFunctionSignature(this.errorFunc);\n    // tslint:disable-next-line: no-unused-expression\n  }\n  isInitialised() {\n    return this.status === ContractStatus.INITIALISED;\n  }\n  isSigned() {\n    return this.status === ContractStatus.SIGNED;\n  }\n  isSent() {\n    return this.status === ContractStatus.SENT;\n  }\n  isDeployed() {\n    return this.status === ContractStatus.DEPLOYED;\n  }\n  isRejected() {\n    return this.status === ContractStatus.REJECTED;\n  }\n  isCalled() {\n    return this.status === ContractStatus.CALLED;\n  }\n  setStatus(status: ContractStatus) {\n    this.status = status;\n  }\n\n  get jsonInterface(): any[] {\n    return this.abiModel;\n  }\n\n  set jsonInterface(value: any[]) {\n    this.abiModel = abiMapper(value, this.abiCoder);\n    this.runMethodFactory();\n    this.runEventFactory();\n  }\n\n  get address() {\n    return this.options.address || this.address;\n  }\n\n  set address(value: string) {\n    this.options.address = value;\n  }\n\n  get data() {\n    return this.options.data;\n  }\n\n  set data(value) {\n    this.options.data = value;\n  }\n\n  // deploy\n  deploy(options: any) {\n    return this.methods.contractConstructor(options);\n  }\n\n  runMethodFactory(): Contract {\n    return new MethodFactory(this).addMethodsToContract();\n  }\n  runEventFactory(): Contract {\n    return new EventFactory(this).addEventsToContract();\n  }\n  connect(wallet: Wallet): void {\n    this.wallet = wallet;\n  }\n  setMessegner(messenger: Messenger) {\n    if (this.wallet instanceof Wallet) {\n      this.wallet.setMessenger(messenger);\n    } else {\n      this.wallet.messenger = messenger;\n    }\n  }\n}\n","/**\n * @packageDocumentation\n * @module avalanche-contract\n */\n\nimport { Wallet } from 'avalanche-js-account';\nimport { Contract } from './contract';\nimport { ContractOptions } from './utils/options';\n\nexport class ContractFactory {\n  wallet: Wallet | any;\n\n  constructor(wallet: Wallet | any) {\n    this.wallet = wallet;\n  }\n  createContract(abi: any[], address?: string, options?: ContractOptions) {\n    return new Contract(abi, address, options, this.wallet);\n  }\n}\n"],"names":["NegativeAVAX","BN","AVAX","Zero","HashZero","MaxUint256","hexToBN","paramTypeBytes","RegExp","paramTypeNumber","paramTypeArray","defaultCoerceFunc","type","value","match","parseInt","toString","verifyType","substring","parseParam","param","allowIndexed","originalParam","throwError","i","Error","replace","parent","name","state","allowType","node","length","c","allowParams","components","indexed","child","allowName","allowArray","sibling","push","readArray","Coder","coerceFunc","localName","dynamic","CoderAnonymous","coder","undefined","encode","decode","data","offset","CoderNull","result","arrayify","Uint8Array","consumed","CoderNumber","size","signed","v","startsWith","slice","bounds","maskn","gt","add","mul","lt","toTwos","fromTwos","vString","padZeros","error","INVALID_ARGUMENT","arg","coderType","hexlify","junkLength","dataValue","uint256Coder","CoderBoolean","reason","isZero","CoderFixedBytes","arrayied","valueToByte","bytesPadRight","set","CoderAddress","addr","toChecksumAddress","_encodeDynamicBytes","dataLength","Math","ceil","padding","concat","_decodeDynamicBytes","toNumber","CoderDynamicBytes","CoderString","toUtf8Bytes","toUtf8String","alignSize","pack","coders","values","Array","isArray","arrayValues","forEach","parts","index","staticSize","dynamicSize","part","dynamicOffset","unpack","baseOffset","CoderArray","count","checkArgumentCount","decodedLength","CoderTuple","types","join","paramTypeSimple","address","bool","string","bytes","getTupleParamCoder","component","getParamCoder","matcher","matcher2","matcher3","shallowCopy","deepCopy","UnicodeNormalizationForm","str","form","current","checkNormalize","normalize","charCodeAt","c2","ignoreErrors","String","fromCharCode","extraLength","overlongMask","res","j","nextChar","formatBytes32String","text","parseBytes32String","isType","object","_ethersType","key","opaque","number","frozen","map","item","Object","freeze","defineReadOnly","AbiCoder","checkNew","typeObject","encodedArray","jsonInterfaceMethodToString","json","isObject","includes","flattenTypes","inputs","includeTuple","puts","suffix","arrayBracket","indexOf","bnToString","isBN","AbiCoderClass","encodeFunctionSignature","functionName","keccak256","encodeEventSignature","encodeParameter","encodeParameters","params","encodeFunctionCall","jsonInterface","decodeParameter","decodeParameters","outputs","returnValues","decodedValue","output","decodeLog","topics","topicCount","nonIndexedInputKeys","nonIndexedInputItems","input","isStaticType","itemKey","EtherCoder","AbiItem","abiItem","signature","payable","anonymous","contractMethodParameters","getInputLength","getInputs","getOutputs","getIndexedInputs","filter","isOfType","AbiModel","mappedAbi","abi","getMethod","hasMethod","methods","getMethods","getEvent","hasEvent","events","getFallback","hasFallback","fallback","getReceive","hasReceive","receive","getEvents","getEventBySignature","event","keys","abiMapper","abiCoder","mappedAbiItems","hasConstructor","constant","isConstant","isPayable","funcName","abiItemModel","stateMutability","methodEncoder","deployData","encodedParameters","eventFilterEncoder","filterItem","ContractStatus","ContractMethod","methodKey","contract","wallet","transaction","createTransaction","callPayload","callResponse","send","gasLimit","gas","signTxs","tx","waitConfirm","updateNonce","nonce","signTransaction","then","sendTransaction","sent","txn","id","isRejected","emitter","reject","confirm","resolve","estimateGas","call","options","blockNumber","shardID","txPayload","sendPayload","messenger","RPCMethod","Call","chainPrefix","isError","message","isResult","afterCall","estPayload","to","getResultForData","EstimateGas","responseType","encodeABI","debug","signer","TransactionFactory","getContractAddress","setStatus","SIGNED","SENT","txParams","receipt","txStatus","TxStatus","CONFIRMED","DEPLOYED","CALLED","REJECTED","defaultOptions","Unit","asWei","toWei","gasPrice","asGwei","txObject","getAddress","checksum","newTx","response","errorFuncSig","errmsg","revert","MethodFactory","abiModel","methodKeys","mapMethodKeys","addMethodsToContract","newObject","assign","calldata","argumentTopics","raw","inputLogFormatter","fromBlock","inputBlockNumberFormatter","toBlock","topic","toTopic","inputAddressFormatter","outputLogFormatter","log","blockHash","transactionHash","logIndex","shaId","substr","transactionIndex","isPredefinedBlockNumber","isHexString","isString","toLowerCase","numberToHex","isAddress","EventMethod","onNewSubscriptionItem","subscriptionItem","formatted","method","eventLogDecoder","removed","emit","LogSub","EventFactory","eventKeys","mapEventKeys","addEventsToContract","unshift","Contract","status","INITIALISED","currentShard","runMethodFactory","runEventFactory","errorFunc","isInitialised","isSigned","isSent","isDeployed","isCalled","deploy","contractConstructor","connect","setMessegner","Wallet","setMessenger","ContractFactory","createContract"],"mappings":"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"}